# Rename this file to ".env" or "*.env" if you like

# REQUIRE can include other .env files (both in string or list format)
# e.g. REQUIRE=base.env
# e.g. REQUIRE=['base.env', 'server.env']
REQUIRE=

# RUNNING_MODE: Which mode to run the ml.py?
# Uncomment the following for your case:
#RUNNING_MODE=CLIENT
#RUNNING_MODE=SERVER
RUNNING_MODE=OFFLINE
#RUNNING_MODE=GAME_ONLINE
#RUNNING_MODE=GAME_OFFLINE

# Configuration settings for the SSH Server
PAIA_ID=
PAIA_HOST=
PAIA_PORT=
PAIA_USERNAME=
PAIA_PASSWORD=

# GAME_ID: The ID to show in the game result
GAME_ID="kart"

# Finish game if reach MAX_EPISODES, use negative value for unlimit episodes
MAX_EPISODES=-1

# LOG_LEVEL: The depth you want to log information using logging module
# Uncomment the following for your case (Recommand using INFO or DEBUG):
#LOG_LEVEL=CRITICAL
#LOG_LEVEL=ERROR
#LOG_LEVEL=WARNING
LOG_LEVEL=INFO
#LOG_LEVEL=DEBUG
#LOG_LEVEL=NOTSET

# Video: Record the video of the game
VIDEO_ENABLE=false
VIDEO_DIR="video"
VIDEO_TIMESTAMP=true
VIDEO_PREFIX=${GAME_ID}_
VIDEO_WIDTH=960
VIDEO_HEIGHT=540
VIDEO_FREQUENCY=1

# Demo: Record demonstration files (.paia), which can use by imitation learning
DEMO_ENABLE=false
DEMO_DIR="demo"
DEMO_DIR_TIMESTAMP=true
DEMO_PREFIX=${GAME_ID}_
DEMO_FREQUENCY=1
DEMO_ALL_IN_ONE=true

# IMAGE_DIR: The directory to store the images when using PAIA.state_info() function
IMAGE_DIR="cameras"
IMAGE_DIR_TIMESTAMP=true