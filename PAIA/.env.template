# Rename this file to ".env" or "*.env" if you like

# REQUIRE can include other .env files (both in string or list format)
# e.g. REQUIRE=base.env
# e.g. REQUIRE=['base.env', 'online.env']
REQUIRE=


# RUNNING_MODE: Which mode to run the ml.py?
# Uncomment the following for your case:
#RUNNING_MODE=PLAY
#RUNNING_MODE=ONLINE
RUNNING_MODE=OFFLINE
#RUNNING_MODE=GAME_ONLINE
#RUNNING_MODE=GAME_OFFLINE


# Configuration settings for the SSH Server
PAIA_ID=
PAIA_HOST=
PAIA_PORT=
PAIA_USERNAME=
PAIA_PASSWORD=


# About Game playing
PLAYER_ID="kart" # The ID to show in the game result
PLAY_BASE_DIR="ml"
PLAY_SCRIPT="${PLAY_BASE_DIR}/ml_play.py"
PLAY_CONTINUE=false
PLAY_AUTOSAVE_DIR="autosave"
PLAY_AUTOSAVE_PREFIX="ml_play_"
PLAY_AUTOSAVE_USE_NEWEST=true
PLAY_AUTOSAVE_PATH=""
# Play the game for MAX_EPISODES rounds, use negative value for unlimit rounds
MAX_EPISODES=-1


# LOG_LEVEL: The depth you want to log information using logging module
# Uncomment the following for your case (Recommand using INFO or DEBUG):
#LOG_LEVEL=CRITICAL
#LOG_LEVEL=ERROR
#LOG_LEVEL=WARNING
LOG_LEVEL=INFO
#LOG_LEVEL=DEBUG
#LOG_LEVEL=NOTSET


# Recording: Record the video of the game
RECORDING_ENABLE=false
RECORDING_DIR="records"
RECORDING_TIMESTAMP=true
RECORDING_PREFIX=${PLAYER_ID}_
RECORDING_WIDTH=960
RECORDING_HEIGHT=540
RECORDING_PERIOD=1


# Demo: Record demonstration files (.paia), which can use by imitation learning
DEMO_ENABLE=false
DEMO_DIR="demo"
DEMO_DIR_TIMESTAMP=true
DEMO_PREFIX=${PLAYER_ID}_
DEMO_PERIOD=1
DEMO_ALL_IN_ONE=true


# IMAGE_DIR: The directory to store the images when using PAIA.state_info() function
IMAGE_DIR="cameras"
IMAGE_DIR_TIMESTAMP=true


# Unity Application
UNITY_USE_EDITOR=false
UNITY_APP_AUTO=true
UNITY_APP_BASE_DIR="kart"
UNITY_APP_WINDOWS="Windows/kart.exe"
UNITY_APP_LINUX="Linux/kart.x86_64"
UNITY_APP_MACOS="macOS/kart.app"
UNITY_APP_OTHER=""
UNITY_CONFIG_BASE_DIR="kart"
UNITY_CONFIG_COMPANY="PAIA"
UNITY_CONFIG_PRODUCT="kart"